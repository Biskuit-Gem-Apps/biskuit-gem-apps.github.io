{"version":3,"sources":["components/Loading.jsx","components/documents/DocxViewer.jsx","pages/support/ViewDocxPage.jsx"],"names":["Loading","className","DocxViewer","props","useState","docContent","setDocContent","useEffect","fetch","src","then","res","arrayBuffer","data","mammoth","convertToHtml","result","html","value","messages","done","dangerouslySetInnerHTML","__html","ViewDocxPage","Page","title","docName"],"mappings":"oNAQeA,EANC,WACf,OACC,uBAAGC,UAAU,2B,kBC4BAC,EA3BI,SAAAC,GAAU,IAAD,EACYC,mBAAS,MADrB,mBACjBC,EADiB,KACLC,EADK,KAiBxB,OAdAC,qBAAU,WACNC,MAAML,EAAMM,KACPC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,iBAChBF,MAAK,SAAAG,GACFC,IAAQC,cAAc,CAAEH,YAAaC,IAChCH,MAAK,SAASM,GACX,IAAMC,EAAOD,EAAOE,MACHF,EAAOG,SACxBb,EAAcW,MAEjBG,YAEd,IAEgB,OAAff,EACO,yBAAKJ,UAAU,UAAUoB,wBAAyB,CAAEC,OAAQjB,KAEhE,kBAAC,EAAD,OCHIkB,UAjBM,SAAApB,GACjB,OACI,kBAACqB,EAAA,EAAD,CAAMC,MAAOtB,EAAMsB,OACf,yBAAKxB,UAAU,uBACX,yBAAKA,UAAU,cACX,kBAAC,EAAD,CAAYQ,IAA8B,QAAUN,EAAMuB","file":"static/js/5.05e1bdb4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Loading = () => {\n\treturn (\n\t\t<i className='fa fa-spinner fa-spin' />\n\t);\n};\n\nexport default Loading;\n","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from 'react';\nimport Loading from \"../Loading\";\nimport mammoth from \"mammoth\";\n\nconst DocxViewer = props => {\n    const [docContent, setDocContent] = useState(null);\n\n    useEffect(() => {\n        fetch(props.src)\n            .then(res => res.arrayBuffer())\n            .then(data => {\n                mammoth.convertToHtml({ arrayBuffer: data })\n                    .then(function(result){\n                        const html = result.value; // The generated HTML\n                        const messages = result.messages; // Any messages, such as warnings during conversion\n                        setDocContent(html);\n                    })\n                    .done();\n            });\n    }, []);\n\n    if (docContent !== null) {\n        return <div className=\"my-docx\" dangerouslySetInnerHTML={{ __html: docContent }}/>;\n    }\n    return <Loading />\n};\n\nDocxViewer.propTypes = {\n    src: PropTypes.string.isRequired,\n};\n\nexport default DocxViewer;","import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport Page from \"../../components/Page\";\nimport DocxViewer from \"../../components/documents/DocxViewer\";\n\nconst ViewDocxPage = props => {\n    return (\n        <Page title={props.title}>\n            <div className=\"panel panel-default\">\n                <div className=\"panel-body\">\n                    <DocxViewer src={process.env.PUBLIC_URL + '/doc/' + props.docName} />\n                </div>\n            </div>\n        </Page>\n    )\n};\n\nViewDocxPage.propTypes = {\n    title: PropTypes.string.isRequired,\n    docName: PropTypes.string.isRequired,\n};\n\nexport default ViewDocxPage;"],"sourceRoot":""}