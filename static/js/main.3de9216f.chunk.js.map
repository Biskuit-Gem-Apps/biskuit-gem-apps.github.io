{"version":3,"sources":["components/Page.jsx","assets/img/logo.png","pages/HomePage.jsx","pages/PageNotFound.jsx","components/navigation/NavBarDropdown.jsx","components/navigation/NavBarMenuItem.jsx","utils/navigation/menu-item-config.js","utils/navigation/menu-item-utils.js","components/navigation/NavBar.jsx","components/navigation/SidebarMenuItem.jsx","components/navigation/SidebarMenuList.jsx","components/navigation/SideBar.jsx","components/navigation/NavContainer.jsx","pages/App.jsx","index.js"],"names":["Page","props","className","title","children","HomePage","to","src","logo","alt","href","PageNotFound","NavbarDropdown","showDropdown","items","map","menuItem","idx","key","onClick","closeDropdown","pathname","label","withRouter","useState","setShowDropdown","toggleDropdown","item","onMouseEnter","onMouseLeave","e","preventDefault","history","push","AboutPage","React","lazy","ViewDocxPage","MENU_ITEMS","icon","component","noRoute","render","docName","setSidebarMenuState","menuItems","pathToMenuItemMap","currentPath","obj","selected","expanded","result","Object","keys","length","constructor","initSidebarMenu","getRoutesFromMenuItem","results","getRoutesFromConfig","NavBar","setMenuItems","useEffect","toggleSidebar","showSidebar","setMenuItem","listClass","setListClass","subMenuClass","isSelected","location","selectedItem","depth","SidebarMenuList","selectedMenuItem","setSelectedMenuItem","setPathToMenuItemMap","NavContainer","setShowSidebar","handleToggleSidebar","Fragment","App","basename","process","Suspense","fallback","exact","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3de9216f.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React from \"react\";\n\nconst Page = props => {\n    return (\n        <div className=\"app-content\">\n            {props.title && (\n                <div className=\"content-top clearfix\">\n                    <h1 className=\"page-title\">{props.title}</h1>\n                </div>\n            )}\n            <div>\n                {props.children}\n            </div>\n        </div>\n    );\n};\n\nPage.propTypes = {\n    title: PropTypes.string,\n};\n\nexport default Page;\n","export default __webpack_public_path__ + \"static/media/logo.4bc7eaf6.png\";","import React from 'react';\nimport logo from \"../assets/img/logo.png\";\nimport { Link } from \"react-router-dom\";\n\nconst HomePage = () => {\n    return (\n        <div className=\"app-landing\">\n            <div className=\"landing-text\">\n                <h2>Welcome! <br /> to <span>Biskuit Gem</span> Workspace <span>^^</span></h2>\n                <p>We are a small team of individual developers that loves to develop applications, games and websites.</p>\n                <Link to=\"/about\">Learn More</Link>\n            </div>\n            <div className=\"landing-image\">\n                <img src={logo} alt=\"logo\" />\n            </div>\n            <ul className=\"landing-socicons\">\n                <li><a href=\"https://github.com/biskuitgem\"><i className=\"socicon socicon-github\" /></a></li>\n                <li><a href=\"#\"><i className=\"socicon socicon-android\" /></a></li>\n                <li><a href=\"#\"><i className=\"socicon socicon-apple\" /></a></li>\n            </ul>\n        </div>\n    );\n};\n\nexport default HomePage;","import React from 'react';\nimport Page from \"../components/Page\";\n\nconst PageNotFound = () => {\n    return <Page title=\"Page Not Found\" />;\n};\n\nexport default PageNotFound;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\n\nconst NavbarDropdown = props => {\n    return (\n        <ul className={`my-dropdown-menu ${props.showDropdown ? '' : 'collapsed'}`}>\n            {props.items.map((menuItem, idx) => (\n                <li key={idx} onClick={props.closeDropdown}>\n                    <Link to={menuItem.pathname} className=\"my-dropdown-menu-link\">\n                        {menuItem.label}\n                    </Link>\n                </li>\n            ))}\n        </ul>\n    );\n};\n\nNavbarDropdown.propTypes = {\n    items: PropTypes.array.isRequired,\n    showDropdown: PropTypes.bool.isRequired,\n    closeDropdown: PropTypes.func.isRequired,\n};\n\nexport default NavbarDropdown;","import PropTypes from \"prop-types\";\nimport React, { useState } from 'react';\nimport { Link, withRouter } from \"react-router-dom\";\nimport NavbarDropdown from \"./NavBarDropdown\";\n\nconst NavBarMenuItem = props => {\n    const [showDropdown, setShowDropdown] = useState(false);\n\n    const toggleDropdown = () => {\n        if (props.item.items) {\n            setShowDropdown(!showDropdown);\n        }\n    };\n\n    const handleMenuItemClick = e => {\n        if (props.item.items) {\n            e.preventDefault();\n        } else {\n            props.history.push(props.item.pathname);\n        }\n    }\n\n    return (\n        <li className=\"my-navbar-menu-item\" onClick={toggleDropdown} onMouseEnter={() => setShowDropdown(true)} onMouseLeave={() => setShowDropdown(false)}>\n            <Link to={props.item.pathname} className=\"my-navbar-menu-item-link\" onClick={handleMenuItemClick}>\n                {props.item.label} {props.item.items && (\n                    <i className={`fas ${showDropdown ? \"fa-caret-up\" : 'fa-caret-down'}`} />\n                )}\n            </Link>\n            {props.item.items && <NavbarDropdown showDropdown={showDropdown} items={props.item.items} closeDropdown={toggleDropdown} />}\n        </li>\n    );\n};\n\nNavBarMenuItem.propTypes = {\n    history: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    item: PropTypes.object.isRequired,\n};\n\nexport default withRouter(NavBarMenuItem);\n","import React from \"react\";\n\nconst AboutPage = React.lazy(() => import(\"../../pages/AboutPage\"));\nconst ViewDocxPage = React.lazy(() => import(\"../../pages/support/ViewDocxPage\"));\nconst WITPage = React.lazy(() => import(\"../../pages/projects/WITPage\"));\n\nexport const MENU_ITEMS = [\n    {\n        pathname: \"/about\",\n        label: 'About',\n        icon: 'info-circle',\n        component: AboutPage,\n    },\n    {\n        pathname: \"/projects\",\n        noRoute: true, /* set this variable to true as this is a dropdown menu */\n        label: 'Projects',\n        icon: 'rocket',\n        items: [\n            {\n                pathname: '/projects/workout-interval-timer',\n                label: 'WIT (Mobile)',\n                icon: 'stopwatch',\n                component: WITPage,\n            }\n        ],\n    },\n    {\n        pathname: '/support',\n        noRoute: true, /* set this variable to true as this is a dropdown menu */\n        label: 'Support',\n        icon: 'question-circle',\n        items: [\n            {\n                pathname: '/support/privacy-policy',\n                label: 'Privacy Policy',\n                icon: 'shield-alt',\n                render: props => <ViewDocxPage {...props} title=\"Privacy Policy\" docName=\"Privacy.docx\" />,\n            },\n            {\n                pathname: '/support/terms-and-conditions',\n                label: 'Terms and Conditions',\n                icon: 'file-signature',\n                render: props => <ViewDocxPage {...props} title=\"Terms and Conditions\" docName=\"Terms.docx\" />,\n            }\n        ],\n    },\n];","import { MENU_ITEMS } from \"./menu-item-config\";\n\nconst isEmptyObject = obj => obj && Object.keys(obj).length === 0 && obj.constructor === Object;\n\nconst setSidebarMenuState = (menuItems, pathToMenuItemMap, currentPath) => {\n    let selected = {};\n    let item;\n    for (item of menuItems) {\n        // add item to map\n        pathToMenuItemMap[item.pathname] = item;\n        // process item\n        item.expanded = false; // default state\n        if (item.pathname === currentPath) {\n            selected = item;\n            break;\n        } else {\n            if (item.items) {\n                const result = setSidebarMenuState(item.items, pathToMenuItemMap, currentPath);\n                if (!isEmptyObject(result)) {\n                    // it is sub item (expand current item)\n                    selected = result;\n                    item.expanded = true;\n                    // break;\n                }\n            }\n        }\n    }\n    return selected;\n};\n\nexport const initSidebarMenu = currentPath => {\n    const menuItems = MENU_ITEMS;\n    const pathToMenuItemMap = {};\n    const selected = setSidebarMenuState(menuItems, pathToMenuItemMap, currentPath);\n    return { menuItems, pathToMenuItemMap, selected };\n};\n\nexport const initNavbarMenu = () => {\n    return MENU_ITEMS;\n};\n\nconst getRoutesFromMenuItem = (menuItems, results) => {\n    let item;\n    for (item of menuItems) {\n        if (!item.noRoute) {\n            results.push(item);\n        }\n\n        if (item.items) {\n            getRoutesFromMenuItem(item.items, results);\n        }\n    }\n};\n\nexport const getRoutesFromConfig = () => {\n    const menuItems = MENU_ITEMS;\n    const results = [];\n    getRoutesFromMenuItem(menuItems, results);\n    return results;\n};","import PropTypes from \"prop-types\";\nimport React, { useEffect, useState }  from \"react\";\nimport { Link } from 'react-router-dom';\nimport NavBarMenuItem from \"./NavBarMenuItem\";\nimport logo from \"../../assets/img/logo.png\";\nimport { initNavbarMenu } from \"../../utils/navigation/menu-item-utils\";\n\nconst NavBar = props => {\n    const [menuItems, setMenuItems] = useState([]);\n\n    useEffect(() => {\n        setMenuItems(initNavbarMenu());\n    }, []);\n\n    return (\n        <nav className=\"my-navbar\">\n            <Link to='/' className=\"my-navbar-logo\">\n                <img src={logo} alt=\"logo\" />\n                Biskuit<span>Gem</span>\n            </Link>\n            <div className=\"my-navbar-bars\" onClick={() => props.toggleSidebar()}>\n                <i className={props.showSidebar ? \"fa fa-times\" : \"fa fa-bars\"}/>\n            </div>\n            <ul className=\"my-navbar-menu\">\n                {menuItems.map((menuItem, idx) => <NavBarMenuItem key={idx} item={menuItem} />)}\n            </ul>\n        </nav>\n    );\n};\n\nNavBar.propTypes = {\n    showSidebar: PropTypes.bool.isRequired,\n    toggleSidebar: PropTypes.func.isRequired,\n};\n\nexport default NavBar;","import PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport SidebarMenuList from \"./SidebarMenuList\";\n\nconst SidebarMenuItem = props => {\n    const [menuItem, setMenuItem] = useState(props.item);\n    const [listClass, setListClass] = useState(\"\");\n\n    useEffect(() => {\n        const subMenuClass = menuItem.items ? \"with-sub-menu\" : \"\";\n        const isSelected = menuItem.items ? \"\" : (props.location.pathname === menuItem.pathname ? 'selected' : \"\");\n        setListClass(`my-sidebar-list-item ${subMenuClass} ${isSelected}`);\n    }, [menuItem, props.selectedItem]);\n\n    const handleOnLinkClicked = e => {\n        if (menuItem.items) {\n            e.preventDefault();\n            // simply toggling the menu Item\n            setMenuItem({\n                ...menuItem,\n                expanded: !menuItem.expanded,\n            });\n        } else {\n            props.toggleSidebar();\n            props.history.push(menuItem.pathname);\n        }\n    };\n\n    return (\n        <li className={listClass} key={menuItem.label}>\n            <Link className=\"my-sidebar-list-link\" to={menuItem.pathname} onClick={handleOnLinkClicked}>\n                <i className={`fa fa-${menuItem.icon}`}/>\n                <span>{menuItem.label}</span>\n                {menuItem.items && (\n                    <b className={`fa ${menuItem.expanded ? \"fa-angle-up\" : \"fa-angle-down\"}`}/>\n                )}\n            </Link>\n            {menuItem.items && (\n                <SidebarMenuList depth={props.depth + 1} items={menuItem.items} expanded={menuItem.expanded} selectedItem={props.selectedItem} toggleSidebar={props.toggleSidebar} />\n            )}\n        </li>\n    );\n};\n\nSidebarMenuItem.propTypes = {\n    depth: PropTypes.number.isRequired,\n    item: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    selectedItem: PropTypes.object.isRequired,\n    toggleSidebar: PropTypes.func.isRequired,\n};\n\nexport default withRouter(SidebarMenuItem);","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport SidebarMenuItem from \"./SidebarMenuItem\";\n\nconst SidebarMenuList = props => {\n    return (\n        <ul className={`${props.depth === 1 ? 'my-sidebar-list' : 'my-sidebar-sublist' } ${props.expanded ? 'expanded' : ''}`}>\n            {props.items.map((menuItem, idx) => (\n                <SidebarMenuItem depth={props.depth} item={menuItem} selectedItem={props.selectedItem} key={idx} toggleSidebar={props.toggleSidebar} />\n            ))}\n        </ul>\n    )\n};\n\nSidebarMenuList.propTypes = {\n    depth: PropTypes.number.isRequired,\n    items: PropTypes.array.isRequired,\n    expanded: PropTypes.bool.isRequired,\n    selectedItem: PropTypes.object.isRequired,\n    toggleSidebar: PropTypes.func.isRequired,\n};\n\nexport default SidebarMenuList;","import PropTypes from 'prop-types';\nimport React, { useEffect, useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport SidebarMenuList from \"./SidebarMenuList\";\nimport { initSidebarMenu } from \"../../utils/navigation/menu-item-utils\";\n\nconst Sidebar = props => {\n    const [menuItems, setMenuItems] = useState([]);\n    const [selectedMenuItem, setSelectedMenuItem] = useState({});\n    const [pathToMenuItemMap, setPathToMenuItemMap] = useState({});\n\n    useEffect(() => {\n        if (menuItems.length <= 0) {\n            const results = initSidebarMenu(props.location.pathname);\n            setMenuItems(results.menuItems);\n            setSelectedMenuItem(results.selected);\n            setPathToMenuItemMap(results.pathToMenuItemMap);\n        } else if (props.location.pathname in pathToMenuItemMap) {\n            setSelectedMenuItem(pathToMenuItemMap[props.location.pathname]);\n        }\n    }, [props.location.pathname]);\n\n    return (\n        <div className={`my-sidebar-overlay ${props.showSidebar ? \"\" : \"collapsed\"}`}>\n            <div className=\"my-sidebar\">\n                {props.showSidebar && (\n                    <SidebarMenuList depth={1} items={menuItems} expanded={false} selectedItem={selectedMenuItem} toggleSidebar={props.toggleSidebar} />\n                )}\n            </div>\n        </div>\n    );\n};\n\nSidebar.propTypes = {\n    location: PropTypes.object.isRequired,\n    showSidebar: PropTypes.bool.isRequired,\n    toggleSidebar: PropTypes.func.isRequired,\n};\n\nexport default withRouter(Sidebar);\n","import React, { useState } from \"react\";\nimport NavBar from \"./NavBar\";\nimport Sidebar from \"./SideBar\";\n\nconst NavContainer = () => {\n    const [showSidebar, setShowSidebar] = useState(false);\n\n    const handleToggleSidebar = () => {\n        setShowSidebar(!showSidebar);\n    };\n\n    return (\n        <React.Fragment>\n            <NavBar showSidebar={showSidebar} toggleSidebar={handleToggleSidebar} />\n            <Sidebar showSidebar={showSidebar} toggleSidebar={handleToggleSidebar} />\n        </React.Fragment>\n    );\n};\n\nexport default NavContainer;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport HomePage from \"./HomePage\";\nimport PageNotFound from \"./PageNotFound\";\nimport NavContainer from \"../components/navigation/NavContainer\";\nimport { getRoutesFromConfig } from \"../utils/navigation/menu-item-utils\";\n\nconst App = () => {\n  \treturn (\n\t    <div className=\"app\">\n\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t<div className=\"app-header\">\n\t\t\t\t\t<NavContainer />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"app-main\">\n\t\t\t\t\t<React.Suspense fallback=\"Loading Routes...\">\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t\t\t\t\t{getRoutesFromConfig().map((menuItem, idx) => {\n\t\t\t\t\t\t\t\tif (menuItem.component) {\n\t\t\t\t\t\t\t\t\treturn <Route key={idx} exact path={menuItem.pathname} component={menuItem.component}/>;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn <Route key={idx} exact path={menuItem.pathname} render={menuItem.render}/>;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t<Route path=\"*\" component={PageNotFound}/>\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</React.Suspense>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"app-footer\" />\n\t\t\t</Router>\n\t    </div>\n  \t)\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './pages/App';\nimport './styles/main.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}